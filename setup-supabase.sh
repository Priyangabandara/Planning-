#!/bin/bash

echo "üöÄ Planning Tool - Supabase Setup Guide"
echo "========================================"
echo ""

# Check if .env files exist
if [ ! -f "backend/.env" ]; then
    echo "‚ùå Backend .env file not found. Creating from template..."
    cp backend/.env.example backend/.env
fi

if [ ! -f "frontend/.env" ]; then
    echo "‚ùå Frontend .env file not found. Creating from template..."
    cp frontend/.env.example frontend/.env
fi

echo "‚úÖ Environment files created!"
echo ""
echo "üìù SUPABASE SETUP INSTRUCTIONS:"
echo "================================"
echo ""
echo "1. Go to https://supabase.com and create a new project"
echo ""
echo "2. Get your project credentials from Supabase Dashboard:"
echo "   - Go to Settings > API"
echo "   - Copy the following values:"
echo "     * Project URL"
echo "     * anon/public key"
echo "     * service_role key (keep this secret!)"
echo ""
echo "3. Get your database connection string:"
echo "   - Go to Settings > Database"
echo "   - Copy the connection string (URI format)"
echo ""
echo "4. Update backend/.env with your credentials:"
echo "   - Replace 'your-project-ref' with your actual project reference"
echo "   - Replace 'your_anon_key_here' with your anon key"
echo "   - Replace 'your_service_role_key_here' with your service role key"
echo "   - Replace the DATABASE_URL with your connection string"
echo ""
echo "5. Update frontend/.env with your credentials:"
echo "   - Replace 'your-project-ref' with your actual project reference"
echo "   - Replace 'your_anon_key_here' with your anon key"
echo ""
echo "6. Set up the database schema:"
echo "   - Go to your Supabase dashboard"
echo "   - Navigate to SQL Editor"
echo "   - Copy and paste the contents of supabase-schema.sql"
echo "   - Run the script to create tables and sample data"
echo ""
echo "7. Test the setup:"
echo "   - Install dependencies: npm install"
echo "   - Start backend: cd backend && npm start"
echo "   - Start frontend: cd frontend && npm run dev"
echo ""
echo "üîß CRUD OPERATIONS TESTING:"
echo "==========================="
echo ""
echo "The application includes the following CRUD operations:"
echo ""
echo "üìã MATERIALS (CRUD):"
echo "  - GET /api/materials - Fetch all materials"
echo "  - PUT /api/materials/:id - Update material stock"
echo ""
echo "üìã ORDERS (CRUD):"
echo "  - GET /api/orders - Fetch all orders with BOM info"
echo "  - POST /api/updateOrder - Update order dates"
echo "  - GET /api/bom/:orderId - Get BOM for specific order"
echo ""
echo "üåê FRONTEND PAGES:"
echo "  - /materials - Materials management with stock updates"
echo "  - /planning - Planning board with drag-and-drop order management"
echo "  - / - Dashboard with overview"
echo ""
echo "üîç TROUBLESHOOTING:"
echo "=================="
echo ""
echo "If you get 'Tenant or user not found' error:"
echo "1. Check your DATABASE_URL format"
echo "2. Ensure your Supabase project is active"
echo "3. Verify your database password is correct"
echo "4. Make sure you've run the schema.sql in Supabase"
echo ""
echo "If you get CORS errors:"
echo "1. Check that backend is running on port 3001"
echo "2. Verify CORS_ORIGIN in backend/.env"
echo "3. Ensure frontend is running on port 3000"
echo ""
echo "üìû Need help? Check the SUPABASE_SETUP.md file for detailed instructions."